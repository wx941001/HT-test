<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Dao.IUserDao">
    <resultMap id="userMap" type="Domain.User">
        <id column="id" property="userId" />
        <result column="username" property="userName"/>
        <result column="birthday" property="userBirthday"/>
        <result column="sex" property="userSex"/>
        <result column="address" property="userAddress"/>
    </resultMap>
    <select id="findAll" resultMap="userMap">
        select * from user
    </select>
    <select id="findById" resultMap="userMap">
        select * from user where id=#{userId}
    </select>

    <insert id="saveUser" parameterType="Domain.User" useGeneratedKeys="true" keyProperty="userId">
        insert into user(username,address,sex,birthday) values(#{userName},#{userAddress},#{userSex},#{userBirthday})
    </insert>

    <update id="updateUserById" parameterType="Domain.User">
        update user set username=#{userName},birthday=#{userBirthday},sex=#{userSex},address=#{userAddress} where id=#{userId}
    </update>

    <delete id="deleteUerById" >
        delete from user where id =#{uid}
    </delete>

    <select id="findByName" resultType="Domain.User">
        select * from user where username like #{userName}
    </select>
    <select id="count" resultType="Integer">
        select count(*) from user
    </select>

    <select id="findByVo" parameterType="Domain.QueryVo" resultMap="userMap">
        select * from user where username like #{name} and address like #{address}
    </select>

    <select id="findInIds" resultMap="userMap" parameterType="Domain.QueryVoIds">
        select * from user
        <where>
            <if test="ids!=null and ids.size()>0">
                <foreach collection="ids" open="id in (" close=")" item="aaa" separator=",">#{aaa}</foreach>
            </if>
        </where>
    </select>
</mapper>


